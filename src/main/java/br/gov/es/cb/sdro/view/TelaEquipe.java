/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.gov.es.cb.sdro.view;

import br.gov.es.cb.sdro.control.MilitarControler;
import br.gov.es.cb.sdro.model.Equipe;
import br.gov.es.cb.sdro.model.Militar;
import br.gov.es.cb.sdro.model.Sco;
import br.gov.es.cb.sdro.util.EquipamentoDAO;
import br.gov.es.cb.sdro.util.EquipeDAO;
import br.gov.es.cb.sdro.util.MilitarDAO;
import br.gov.es.cb.sdro.util.Sessao;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sun.security.x509.AttributeNameEnumeration;

/**
 *
 * @author Thales Carreta
 */
public class TelaEquipe extends javax.swing.JInternalFrame {

    MilitarControler militarControler;
    EquipeDAO equipedao;
    MilitarDAO militarDAO;
    DefaultTableModel tableMilitaresDisponiveis;
    DefaultTableModel tableMilitaresAlocadosEquipe;
    HashMap<Integer, ArrayList<Integer>> mapMilitaresExcluir;
    Sessao sessao;

    List<Militar> lstMilitaresSelecionadosEquipe;
    int idEquipeSelecionadaAlteracao;
    boolean novaEquipe;

    /**
     * Creates new form TelaEquipe
     */
    public TelaEquipe() {
        initComponents();
        lstMilitaresSelecionadosEquipe = new ArrayList<>();
        sessao = Sessao.getInstancia();
        novaEquipe = true;
        mapMilitaresExcluir = new HashMap<>();
        militarControler = new MilitarControler();
        equipedao = new EquipeDAO();
        militarDAO = new MilitarDAO();
        tableMilitaresDisponiveis = (DefaultTableModel) jTableMilitaresDisponiveis.getModel();
        tableMilitaresAlocadosEquipe = (DefaultTableModel) jTableMilitaresEquipe.getModel();
        populaComboboxEquipes();
        populaTabelaMilitaresDisponiveis();

    }

    public void populaTabelaMilitaresDisponiveis() {

        List<Militar> listMilitares = new ArrayList<>();
        if (tableMilitaresDisponiveis.getRowCount() > 0) {

            int qtd = tableMilitaresDisponiveis.getRowCount();
            for (int i = 0; i < qtd; i++) {
                tableMilitaresDisponiveis.removeRow(0);
            }
        }

        listMilitares = militarControler.listaMilitaresDisponiveis();

        for (Militar ml : listMilitares) {
            tableMilitaresDisponiveis.addRow(new Object[]{ml.getIdmilitar(), ml.getSafoIdfuncionario().getNome(), ml.getSafoIdfuncionario().getIdpostograducao().getDescricao()});
        }
    }

    public void limpaTabelaMilitaresAlocadosEquipe() {
        if (tableMilitaresAlocadosEquipe.getRowCount() > 0) {

            int qtd = tableMilitaresAlocadosEquipe.getRowCount();
            for (int i = 0; i < qtd; i++) {
                tableMilitaresAlocadosEquipe.removeRow(0);
            }
        }
    }

    public void populaTabelaMilitaresAlocadosEquipe(List<Militar> listMilitares) {

        limpaTabelaMilitaresAlocadosEquipe();

        for (Militar ml : listMilitares) {
            tableMilitaresAlocadosEquipe.addRow(new Object[]{ml.getIdmilitar(), ml.getSafoIdfuncionario().getNome()});
        }
    }

    public void populaComboboxEquipes() {
        jComboEquipes.removeAllItems();
        jComboEquipes.addItem("Selecione a Equipe");
        for (Equipe eq : equipedao.buscaEquipes()) {
            jComboEquipes.addItem(eq.getIdequipe() + "-" + eq.getDescricao());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableMilitaresDisponiveis = new javax.swing.JTable();
        btnAdicionarMilitar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMilitaresEquipe = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDescricao = new javax.swing.JTextPane();
        btnRemoverMilitar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        jComboEquipes = new javax.swing.JComboBox<>();
        AlterarEquipeButton = new javax.swing.JToggleButton();
        novaEquipeBotton = new javax.swing.JToggleButton();
        jLabel4 = new javax.swing.JLabel();
        ExcluirEquipeButton = new javax.swing.JToggleButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.jRadioButtonMenuItem1.text")); // NOI18N

        setClosable(true);

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setText(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.jLabel1.text")); // NOI18N
        jLabel1.setMinimumSize(new java.awt.Dimension(50, 14));

        jTableMilitaresDisponiveis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Posto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMilitaresDisponiveis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMilitaresDisponiveisMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableMilitaresDisponiveis);
        if (jTableMilitaresDisponiveis.getColumnModel().getColumnCount() > 0) {
            jTableMilitaresDisponiveis.getColumnModel().getColumn(0).setMaxWidth(50);
            jTableMilitaresDisponiveis.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.jTableMilitaresDisponiveis.columnModel.title0")); // NOI18N
            jTableMilitaresDisponiveis.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTableMilitaresDisponiveis.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.jTableMilitaresDisponiveis.columnModel.title1")); // NOI18N
            jTableMilitaresDisponiveis.getColumnModel().getColumn(2).setResizable(false);
            jTableMilitaresDisponiveis.getColumnModel().getColumn(2).setPreferredWidth(60);
            jTableMilitaresDisponiveis.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.jTableMilitaresDisponiveis.columnModel.title2")); // NOI18N
        }

        btnAdicionarMilitar.setText(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.btnAdicionarMilitar.text")); // NOI18N
        btnAdicionarMilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarMilitarActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setText(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.jLabel2.text")); // NOI18N
        jLabel2.setMinimumSize(new java.awt.Dimension(50, 14));

        jTableMilitaresEquipe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableMilitaresEquipe);
        if (jTableMilitaresEquipe.getColumnModel().getColumnCount() > 0) {
            jTableMilitaresEquipe.getColumnModel().getColumn(0).setMaxWidth(50);
            jTableMilitaresEquipe.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.jTableMilitaresEquipe.columnModel.title0")); // NOI18N
            jTableMilitaresEquipe.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.jTableMilitaresEquipe.columnModel.title1")); // NOI18N
        }

        jLabel3.setBackground(new java.awt.Color(204, 204, 204));
        jLabel3.setText(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.jLabel3.text")); // NOI18N
        jLabel3.setMinimumSize(new java.awt.Dimension(50, 14));

        jScrollPane3.setViewportView(txtDescricao);

        btnRemoverMilitar.setText(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.btnRemoverMilitar.text")); // NOI18N
        btnRemoverMilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverMilitarActionPerformed(evt);
            }
        });

        btnCancelar.setText(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.btnCancelar.text")); // NOI18N

        btnSalvar.setText(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.btnSalvar.text")); // NOI18N
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jComboEquipes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboEquipes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboEquipesActionPerformed(evt);
            }
        });

        AlterarEquipeButton.setText(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.AlterarEquipeButton.text")); // NOI18N
        AlterarEquipeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlterarEquipeButtonActionPerformed(evt);
            }
        });

        novaEquipeBotton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        novaEquipeBotton.setText(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.novaEquipeBotton.text")); // NOI18N
        novaEquipeBotton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novaEquipeBottonActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.setText(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.jLabel4.text")); // NOI18N
        jLabel4.setMinimumSize(new java.awt.Dimension(50, 14));

        ExcluirEquipeButton.setText(org.openide.util.NbBundle.getMessage(TelaEquipe.class, "TelaEquipe.ExcluirEquipeButton.text")); // NOI18N
        ExcluirEquipeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirEquipeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 164, Short.MAX_VALUE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRemoverMilitar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancelar)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalvar))
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdicionarMilitar))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboEquipes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ExcluirEquipeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(novaEquipeBotton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AlterarEquipeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(novaEquipeBotton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AlterarEquipeButton)
                    .addComponent(jComboEquipes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ExcluirEquipeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdicionarMilitar)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnCancelar)
                    .addComponent(btnRemoverMilitar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarMilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarMilitarActionPerformed
        int linha = jTableMilitaresDisponiveis.getSelectedRow();
        if (linha >= 0) {
            int idMilitar = Integer.parseInt(tableMilitaresDisponiveis.getValueAt(linha, 0).toString());
            Militar militar = militarDAO.buscaMilitarPorId(idMilitar);
            if (novaEquipe) {
                lstMilitaresSelecionadosEquipe.add(militar);
                //System.out.println(lstMilitaresSelecionadosEquipe);
                tableMilitaresDisponiveis.removeRow(linha);
                populaTabelaMilitaresAlocadosEquipe(lstMilitaresSelecionadosEquipe);
            } else {
                try {
                    Equipe eqp = new Equipe();
                    eqp.setIdequipe(idEquipeSelecionadaAlteracao);
                    militar.setIdequipe(eqp);
                    militarControler.alocarMiltarEquipe(militar);
                    JOptionPane.showMessageDialog(null, "Militar adicionado à equipe com sucesso!");
                    tableMilitaresDisponiveis.removeRow(linha);
                    tableMilitaresAlocadosEquipe.addRow(new Object[]{militar.getIdmilitar(), militar.getSafoIdfuncionario().getNome()});
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erro ao adicionar Militar!");
                    throw e;
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Um militar deve ser selecionado!");
        }
    }//GEN-LAST:event_btnAdicionarMilitarActionPerformed

    private void jComboEquipesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboEquipesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboEquipesActionPerformed

    private void AlterarEquipeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlterarEquipeButtonActionPerformed
        novaEquipe = false;
        String equipeAlterar = jComboEquipes.getSelectedItem().toString();
        String[] lstEquipeString = equipeAlterar.split("-");
        if (!lstEquipeString[0].equals("Selecione a Equipe")) {
            Equipe equipe = new Equipe();
            idEquipeSelecionadaAlteracao = Integer.parseInt(lstEquipeString[0]);
            equipe.setIdequipe(idEquipeSelecionadaAlteracao);
            List<Militar> militaresAlocadosEquipe = militarControler.listaMilitaresAlocadosEquipe(equipe);
            populaTabelaMilitaresAlocadosEquipe(militaresAlocadosEquipe);
            txtDescricao.setText(lstEquipeString[1]);
        }


    }//GEN-LAST:event_AlterarEquipeButtonActionPerformed

    private void novaEquipeBottonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novaEquipeBottonActionPerformed
        novaEquipe = true;
        txtDescricao.setText("");
        limpaTabelaMilitaresAlocadosEquipe();
        populaComboboxEquipes();

    }//GEN-LAST:event_novaEquipeBottonActionPerformed

    private void ExcluirEquipeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirEquipeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExcluirEquipeButtonActionPerformed

    private void jTableMilitaresDisponiveisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMilitaresDisponiveisMouseClicked

    }//GEN-LAST:event_jTableMilitaresDisponiveisMouseClicked

    private void btnRemoverMilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverMilitarActionPerformed
        int linha = jTableMilitaresEquipe.getSelectedRow();
        if (linha >= 0) {
            int idMilitar = Integer.parseInt(jTableMilitaresEquipe.getValueAt(linha, 0).toString());
            Militar ml = militarDAO.buscaMilitarPorId(idMilitar);
            if (novaEquipe) {
                removeMilitarEquipe(idMilitar);
                populaTabelaMilitaresAlocadosEquipe(lstMilitaresSelecionadosEquipe);

            } else {
                militarControler.removeMiltarEquipe(idMilitar);
                JOptionPane.showMessageDialog(null, "Militar removido da Equipe com Sucesso!");
                Equipe equipe = new Equipe();
                equipe.setIdequipe(idEquipeSelecionadaAlteracao);
                List<Militar> militaresAlocadosEquipe = militarControler.listaMilitaresAlocadosEquipe(equipe);
                populaTabelaMilitaresAlocadosEquipe(militaresAlocadosEquipe);

            }
            tableMilitaresDisponiveis.addRow(new Object[]{ml.getIdmilitar(), ml.getSafoIdfuncionario().getNome(), ml.getSafoIdfuncionario().getIdpostograducao().getDescricao()});
        } else {
            JOptionPane.showMessageDialog(null, "Um Militar deve ser selecionado");
        }
    }//GEN-LAST:event_btnRemoverMilitarActionPerformed

    public void removeMilitarEquipe(int idMilitar) {
        int index = 0;
        int i;
        for (i = 0; i < lstMilitaresSelecionadosEquipe.size(); i++) {

            if (lstMilitaresSelecionadosEquipe.get(i).getIdmilitar() == idMilitar) {
                index = i;
                break;
            }
        }

        lstMilitaresSelecionadosEquipe.remove(i);
    }

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        String descricaoEquipe = txtDescricao.getText();

        if (novaEquipe) {
            try {
                if (!descricaoEquipe.isEmpty()) {
                    Equipe eq = new Equipe();
                    eq.setDescricao(descricaoEquipe);
                    Sco sco = new Sco();
                    sco.setIdsco(2);
                    eq.setIdsco(sco);
                    eq.setIdunidade(sessao.getUnidade());
                    Equipe eqp = equipedao.criar(eq);
                    System.out.println(eqp);
                    for (Militar ml : lstMilitaresSelecionadosEquipe) {
                        ml.setIdequipe(eqp);
                        militarControler.alocarMiltarEquipe(ml);
                        System.out.println(ml.getIdmilitar());
                    }
                    JOptionPane.showMessageDialog(null, "Equipe criada com sucesso!");
                }

            } catch (Exception e) {
                throw e;
            }

        } else {
            Equipe equipe = equipedao.buscaEquipePorID(idEquipeSelecionadaAlteracao);

            equipe.setDescricao(descricaoEquipe);
            equipedao.update(equipe);
            JOptionPane.showMessageDialog(null, "Equipe atualizada com sucesso!");
            populaComboboxEquipes();
        }
        limpaTabelaMilitaresAlocadosEquipe();
        txtDescricao.setText("");
        lstMilitaresSelecionadosEquipe.clear();

    }//GEN-LAST:event_btnSalvarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton AlterarEquipeButton;
    private javax.swing.JToggleButton ExcluirEquipeButton;
    private javax.swing.JButton btnAdicionarMilitar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnRemoverMilitar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> jComboEquipes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableMilitaresDisponiveis;
    private javax.swing.JTable jTableMilitaresEquipe;
    private javax.swing.JToggleButton novaEquipeBotton;
    private javax.swing.JTextPane txtDescricao;
    // End of variables declaration//GEN-END:variables
}
